buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "0.1"
group 'org.grails.plugins'

apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin:3.1.5"
    provided "org.grails:grails-plugin-services"
    testCompile "org.grails:grails-plugin-domain-class"
    testCompile "org.grails:grails-plugin-testing"

    compile 'org.codehaus.groovy:groovy-json:2.4.6'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

grailsPublish {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    githubSlug = 'sdelamo/grails-geoplugin'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails GeoPlugin"
    desc = "Exposes a Grails service which queries the geoplugin api given an ip address"
    developers = [sdelamo:"Sergio del Amo"]
    portalUser = ""
    portalPassword = ""    
}

bintray {
    pkg {
        name = "$project.name"
        issueTrackerUrl = "https://github.com/sdelamo/$project.name/issues"
        vcsUrl = "https://github.com/sdelamo/$project.name"
        version {
            attributes = ['grails-plugin': "$project.group:$project.name"]
            name = project.version
        }
    }
}
